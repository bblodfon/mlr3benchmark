% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BenchmarkAggr.R
\name{autoplot.BenchmarkAggr}
\alias{autoplot.BenchmarkAggr}
\title{Plots for BenchmarkAggr}
\usage{
\method{autoplot}{BenchmarkAggr}(
  obj,
  type = c("mean", "box", "cd", "fn"),
  meas = NULL,
  level = 0.95,
  p.value = 0.05,
  ...
)
}
\arguments{
\item{obj}{\link{BenchmarkAggr}}

\item{type}{\code{(character(1))} \cr Type of plot, see description.}

\item{meas}{\code{(character(1))} \cr Measure to plot, should be in \code{obj$measures}, can be \code{NULL} if
only one measure is in \code{obj}.}

\item{level}{\code{(numeric(1))} \cr Confidence level for error bars for \code{type = "mean"}}

\item{p.value}{\code{(numeric(1))} \cr What value should be considered significant for
\code{type = "cd"} and \code{type = "fn"}>}

\item{...}{\code{ANY} \cr Additional arguments passed to \verb{[BenchmarkAggr]$crit_differences}.}
}
\description{
Generates plots for \link{BenchmarkAggr}, all assume that there are multiple, independent, tasks.
Choices depending on the argument \code{type}:
\itemize{
\item \code{"mean"} (default): Assumes there are at least two independent tasks. Plots the sample mean
of the measure for all learners with error bars computed with the standard error of the mean.
\item \code{"box"}: Boxplots for each learners calculated over all tasks for a given measure.
\item \code{"cd"}: Critical difference plots (Demsar, 2006), uses the \verb{$crit_differences} method from
\link{BenchmarkAggr}. If a baseline is selected for the Bonferroni-Dunn test, the critical difference
interval will be positioned around the baseline. If not, the best performing algorithm will be
chosen as baseline. Learners are drawn on the y-axis according to their average rank.
For \code{test = "nemenyi"} a bar is drawn, connecting all groups of not
significantly different learners. For \code{test = "bd"} an interval is drawn around the algorithm
selected as a baseline and any learner within this interval is not significantly different
from the baseline.
\item \code{"fn"}: Plots post-hoc Friedman-Nemenyi by first calling \verb{[BenchmarkAggr]$friedman_posthoc}
and plotting significant pairs in coloured squares and leaving non-significant pairs blank.
}
}
\examples{
library(mlr3)
library(mlr3learners)
set.seed(1)
task = tsks(c("iris", "sonar", "wine", "zoo"))
learns = lrns(c("classif.featureless", "classif.ranger", "classif.xgboost"))
bm = benchmark(benchmark_grid(task, learns, rsmp("cv", folds = 3)))
obj = as.BenchmarkAggr(bm)

# mean and error bars
autoplot(obj, type = "mean")

# critical differences
autoplot(obj, type = "cd")

# post-hoc friedman-nemenyi
autoplot(obj, type = "fn")

}
\references{
Janez Demsar, Statistical Comparisons of Classifiers over
Multiple Data Sets, JMLR, 2006
}
